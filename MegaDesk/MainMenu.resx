<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAAEASABIAAD/4QB2RXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAABAAAAALAAAAABVTklDT0RFAABMAEUAQQBEACAAVABlAGMAaABuAG8AbABvAGcAaQBlAHMAIABJ
        AG4AYwAuACAAVgAxAC4AMAAxAAD/2wBDAAUFBQgFCAwHBwwMCQkJDA0MDAwMDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ3/2wBDAQUICAoHCgwHBwwNDAoMDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ3/wAARCAC0ALQDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7LoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAC
        gAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAo
        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
        f//Z
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAAEASABIAAD/4QBuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAA6AAAALAAAAABMAEUAQQBEACAAVABlAGMAaABuAG8AbABvAGcAaQBlAHMAIABJAG4AYwAuACAA
        VgAxAC4AMAAxAAAA/9sAQwAFBQUIBQgMBwcMDAkJCQwNDAwMDA0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N/9sAQwEFCAgKBwoMBwcMDQwKDA0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
        DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N/8AAEQgAtAC0AwERAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A+y6ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKA
        CgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAEBB
        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
</value>
  </data>
</root>